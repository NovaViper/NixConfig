#+title: =My NixOS Configurations=

[[https://builtwithnix.org][https://img.shields.io/badge/Built_with_Nix-white.svg?style=for-the-badge&logo=nixos&logoColor=white&color=41439a&test.svg]]
[[https://codeberg.org/NovaViper/NixConfig][https://img.shields.io/badge/Codeberg-white.svg?style=for-the-badge&logo=codeberg&logoColor=white&color=2185D0&test.svg]]
[[https://github.com/NovaViper/NixConfig][https://img.shields.io/badge/Github-white.svg?style=for-the-badge&logo=github&logoColor=white&color=121011&test.svg]]

My current NixOS (and constant changing) configuration

* Table of Contents :TOC_3:noexport:
- [[#highlights][Highlights]]
- [[#references][References]]
- [[#structure][Structure]]
- [[#installationusage][Installation/Usage]]
- [[#tooling-and-applications-i-use][Tooling and Applications I Use]]
- [[#final-note][Final Note]]

* Highlights
- Multiple NixOS configurations, including laptop and desktop
- Install and partitioning scripts
- Flexible Home Manager with feature flags
- Modular configuration
- Wayland/X11 Setups
- Multiple fully featured desktop environments (KDE Plasma, Hyprland (still under testing), and XFCE)
- Live image ISO build with Nvidia drivers and experimental nix features already enabled (and unfree software usage)
- Declarative themes with *theme* module

* References
- [[https://github.com/Misterio77/nix-config][Mistero77's nix-config]] and [[https://github.com/Misterio77/nix-starter-configs][nix starter configs]] - Makes up a large majority of the entire config, primary template used when making the config
- [[https://github.com/hlissner/dotfiles][Hlissner's dotfiles]] - Security hardening configs
- [[https://github.com/Baitinq/nixos-config][Baitinq's nixos-config]] - Partitioning scripts
- [[https://github.com/theopn/dotfiles/tree/main][Theopn's]] and [[https://github.com/yutkat/dotfiles/tree/main][yutkat's dotfiles]] - Wezterm settings

* Structure
Here's an overview of the repo's file structure:
- =flake.nix=: Entrypoint for host and home configurations. Also exposes a devshell for boostrapping the system (=nix develop= or =nix shell=).
- =hosts=: NixOS Configurations, accessible via =nixos-rebuild --flake=.
  - =common=: Shared configurations consumed by the machine-specific ones.
    - =global=: Configurations that are globally applied to all my machines.
    - =optional=: Opt-in configurations/feature flags, my machines can use.
    - =users=: Configurations for each system on the machines
  - =ryzennova=: Primary PC - 32GB RAM, Ryzen 5600G, RTX 2060 6GB | KDE Plasma X11
  - =yoganova=: Lenovo Yoga 7i - 8GB RAM, Intel i5 1335U | KDE Plasma Wayland
  - =isoimage=: ISO configuration | Nvidia drivers included | KDE Plasma X11
- =home=: My Home-manager configuration, accessible via =home-manager --flake=
  - Each directory here is a "feature" each HM configuration can toggle, thus customizing each machine with configurations for the specific user
- =modules=: Custom modules that aren't available in nixpkgs. Can be NixOS or Home-Manager modules (or both!)
- =overlay=: Patches and version overrides for some packages. Accessible via =nix build=.
- =pkgs=: Custom nix packages defined similarly to nixpkg ones. Also accessible via =nix build=. You can compose these into your own configuration by using my flake's overlay, or consume them through NUR.

* Installation/Usage
For installation, check out the installation guide located under [[file:documentation/installation.org][documentation/installation.org]]! Check out [[file:documentation/tips.org][documentation/tips.org]] for some tips and important information regarding how the entire flake works.

* Tooling and Applications I Use
Main user relevant apps
- kde plasma with wayland and x11
- neovim
- doom emacs
- zsh + powerlevel10k
- vivaldi
- keepassxc
- gpg + ssh-agent + yubikey
- tailscale
- kdeconnect
- krita
- libreoffice
- bat
- cider
- kitty+tmux
- and quite a bit more...

Nix stuff
- home-manager
- NixOS and nix, of course

* Final Note
I designed my NixOS flake to be modular and customizable; so feel free to change it up and use it in your own setups!
